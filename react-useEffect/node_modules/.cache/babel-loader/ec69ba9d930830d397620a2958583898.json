{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\s_gmtmoney2357\\\\Desktop\\\\react\\\\learn-react\\\\react-useEffect\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer, useContext, useRef } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport Button from \"../UI/Button/Button\";\nimport AuthContext from \"../../store/auth-context\";\nimport Input from \"../UI/Input/Input\";\nimport classes from \"./Login.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val.includes(\"@\")\n    };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.includes(\"@\")\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: null\n  });\n  const authCtx = useContext(AuthContext);\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      //특정 시간이 지난 후에 실행\n      console.log(\"Checking form validity!\");\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n    return () => {\n      console.log(\"CLEANUP\");\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n    setFormIsValid(passwordState.isValid && event.target.value.includes(\"@\"));\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n    setFormIsValid(event.target.value.trim().length > 6 && emailState.isValid);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: \"INPUT_BLUR\"\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: \"INPUT_BLUR\"\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (formIsValid) {\n      authCtx.onLogin(emailState.value, passwordState.value);\n    } else if (!emailIsValid) {} else {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        id: \"email\",\n        label: \"E-Mail\",\n        type: \"email\",\n        inValid: emailIsValid,\n        value: emailState.value,\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        inValid: passwordIsValid,\n        value: passwordState.value,\n        onChange: passwordChangeHandler,\n        onBlur: validatePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"6Gdc5+zl2SXkxpTxnJfJZOuNhVI=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/s_gmtmoney2357/Desktop/react/learn-react/react-useEffect/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","useContext","useRef","Card","Button","AuthContext","Input","classes","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","authCtx","emailIsValid","passwordIsValid","emailInputRef","passwordInputRef","identifier","setTimeout","console","log","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer, useContext, useRef } from \"react\";\r\n\r\nimport Card from \"../UI/Card/Card\";\r\nimport Button from \"../UI/Button/Button\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport Input from \"../UI/Input/Input\";\r\nimport classes from \"./Login.module.css\";\r\n\r\nconst emailReducer = (state, action) => {\r\n  if (action.type === \"USER_INPUT\") {\r\n    return { value: action.val, isValid: action.val.includes(\"@\") };\r\n  }\r\n  if (action.type === \"INPUT_BLUR\") {\r\n    return { value: state.value, isValid: state.value.includes(\"@\") };\r\n  }\r\n  return { value: \"\", isValid: false };\r\n};\r\n\r\nconst passwordReducer = (state, action) => {\r\n  if (action.type === \"USER_INPUT\") {\r\n    return { value: action.val, isValid: action.val.trim().length > 6 };\r\n  }\r\n  if (action.type === \"INPUT_BLUR\") {\r\n    return { value: state.value, isValid: state.value.trim().length > 6 };\r\n  }\r\n  return { value: \"\", isValid: false };\r\n};\r\n\r\nconst Login = (props) => {\r\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\r\n  // const [emailIsValid, setEmailIsValid] = useState();\r\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\r\n  // const [passwordIsValid, setPasswordIsValid] = useState();\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\r\n    value: \"\",\r\n    isValid: null,\r\n  });\r\n\r\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\r\n    value: \"\",\r\n    isValid: null,\r\n  });\r\n\r\n  const authCtx = useContext(AuthContext);\r\n  const { isValid: emailIsValid } = emailState;\r\n  const { isValid: passwordIsValid } = passwordState;\r\n\r\n  const emailInputRef = useRef();\r\n  const passwordInputRef = useRef();\r\n  useEffect(() => {\r\n    const identifier = setTimeout(() => {\r\n      //특정 시간이 지난 후에 실행\r\n      console.log(\"Checking form validity!\");\r\n      setFormIsValid(emailIsValid && passwordIsValid);\r\n    }, 500);\r\n\r\n    return () => {\r\n      console.log(\"CLEANUP\");\r\n      clearTimeout(identifier);\r\n    };\r\n  }, [emailIsValid, passwordIsValid]);\r\n\r\n  const emailChangeHandler = (event) => {\r\n    dispatchEmail({ type: \"USER_INPUT\", val: event.target.value });\r\n\r\n    setFormIsValid(passwordState.isValid && event.target.value.includes(\"@\"));\r\n  };\r\n\r\n  const passwordChangeHandler = (event) => {\r\n    dispatchPassword({ type: \"USER_INPUT\", val: event.target.value });\r\n\r\n    setFormIsValid(event.target.value.trim().length > 6 && emailState.isValid);\r\n  };\r\n\r\n  const validateEmailHandler = () => {\r\n    dispatchEmail({ type: \"INPUT_BLUR\" });\r\n  };\r\n\r\n  const validatePasswordHandler = () => {\r\n    dispatchPassword({ type: \"INPUT_BLUR\" });\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    if (formIsValid) {\r\n      authCtx.onLogin(emailState.value, passwordState.value);\r\n    } else if(!emailIsValid) {\r\n      \r\n    } else{\r\n\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.login}>\r\n      <form onSubmit={submitHandler}>\r\n        <Input\r\n          id=\"email\"\r\n          label=\"E-Mail\"\r\n          type=\"email\"\r\n          inValid={emailIsValid}\r\n          value={emailState.value}\r\n          onChange={emailChangeHandler}\r\n          onBlur={validateEmailHandler}\r\n        />\r\n        <Input\r\n          id=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          inValid={passwordIsValid}\r\n          value={passwordState.value}\r\n          onChange={passwordChangeHandler}\r\n          onBlur={validatePasswordHandler}\r\n        />\r\n        <div className={classes.actions}>\r\n          <Button type=\"submit\" className={classes.btn}>\r\n            Login\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}