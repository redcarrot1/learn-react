{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\s_gmtmoney2357\\\\Desktop\\\\react\\\\learn-react\\\\react-useEffect\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport AuthContext from \"./store/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  useEffect(() => {\n    const storedIserLoggedInInformation = localStorage.getItem(\"isLoggedIn\");\n\n    if (storedIserLoggedInInformation === \"1\") {\n      setIsLoggedIn(true);\n    }\n  }, []);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem(\"isLoggedIn\", \"1\"); //0로그아웃, 1 로그인\n\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.setItem(\"isLoggedIn\", \"0\");\n    setIsLoggedIn(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogout: logoutHandler\n    },\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"RXEREhPqr8kHjAVNGqMY927UGB0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/s_gmtmoney2357/Desktop/react/learn-react/react-useEffect/src/App.js"],"names":["React","useState","useEffect","Login","Home","MainHeader","AuthContext","App","storedIserLoggedInInformation","localStorage","getItem","setIsLoggedIn","isLoggedIn","loginHandler","email","password","setItem","logoutHandler","onLogout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACbL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,6BAA6B,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAtC;;AAEA,QAAIF,6BAA6B,KAAK,GAAtC,EAA2C;AACzCG,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,GANQ,EAMN,EANM,CAAT;AAQA,QAAM,CAACC,UAAD,EAAaD,aAAb,IAA8BV,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMY,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxC;AACA;AACAN,IAAAA,YAAY,CAACO,OAAb,CAAqB,YAArB,EAAmC,GAAnC,EAHwC,CAGC;;AACzCL,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GALD;;AAOA,QAAMM,aAAa,GAAG,MAAM;AAC1BR,IAAAA,YAAY,CAACO,OAAb,CAAqB,YAArB,EAAmC,GAAnC;AACAL,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAHD;;AAKA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAEA,UADP;AAELM,MAAAA,QAAQ,EAAED;AAFL,KADT;AAAA,4BAME,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAA,iBACG,CAACL,UAAD,iBAAe,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEC;AAAhB;AAAA;AAAA;AAAA;AAAA,cADlB,EAEGD,UAAU,iBAAI,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEK;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GArCQV,G;;KAAAA,G;AAuCT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport Login from \"./components/Login/Login\";\r\nimport Home from \"./components/Home/Home\";\r\nimport MainHeader from \"./components/MainHeader/MainHeader\";\r\nimport AuthContext from \"./store/auth-context\";\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    const storedIserLoggedInInformation = localStorage.getItem(\"isLoggedIn\");\r\n\r\n    if (storedIserLoggedInInformation === \"1\") {\r\n      setIsLoggedIn(true);\r\n    }\r\n  }, []);\r\n\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const loginHandler = (email, password) => {\r\n    // We should of course check email and password\r\n    // But it's just a dummy/ demo anyways\r\n    localStorage.setItem(\"isLoggedIn\", \"1\"); //0로그아웃, 1 로그인\r\n    setIsLoggedIn(true);\r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    localStorage.setItem(\"isLoggedIn\", \"0\");\r\n    setIsLoggedIn(false);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isLoggedIn: isLoggedIn,\r\n        onLogout: logoutHandler\r\n      }}\r\n    >\r\n      <MainHeader />\r\n      <main>\r\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\r\n        {isLoggedIn && <Home onLogout={logoutHandler} />}\r\n      </main>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}